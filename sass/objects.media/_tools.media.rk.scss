//
// Media mixins
//

//
// fnRuleMO
// Generate Media Object related rule
//
@function fnRuleMO($_inAttr, $_inIsElem: true) {

  $param: fnBEM('', $_inAttr, $_inIsElem);
  $response: fnAttributeRule(media, $param);

  @return $response;

}


//
// mxMediaModifiers
// Generate media modifiers
//

@mixin mxMediaModifiers() {

  $rkMapMediaSpacing: fnModifiersMap(5px, 5px, false);

  @each $key,$val in $rkMapMediaSpacing {

    /* Media object with #{$key} modifier */
    #{fnRuleMO(map-get($rkModifiersNaming, false)} {

      > #{fnRuleMO(img)}
      { margin-right: $val; }

      &#{fnRuleMO(rev, false)} > #{fnRuleMO(img)} {
        margin-right: 0;
        margin-left: $val;
      }

    }

  }

}
