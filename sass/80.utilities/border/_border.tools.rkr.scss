//
// Border Radius tools
//

@mixin rkrBorderRadius ($_inBreakpoint) {
	$tokenBrdRad: $rkrBorderToken + capitalize($rkrBorderTokenRadius);

    $borderModifierTypes: (
        t: (top-left, top-right),
        l: (top-left, bottom-left),
        b: (bottom-left, bottom-right),
        r: (bottom-right, top-right)
    );
	
	@each $mod,$sz in $rkrBorderRadiusSizes {

        $bemRadius: (
            block: $tokenBrdRad,
            modifier: $mod
        );

        #{rkrRuleBEM($rkrBorderEntity, $bemRadius)} { border-radius: $sz !important; }



		@each $type,$v in $rkrBorderRadiusModifiers {
		  $tokenModifier: rkrGetResponsiveToken($v + capitalize($mod), $_inBreakpoint);

			$bemRadTop: (
				block: $tokenBrdRad,
				modifier: $tokenModifier
			);

            $modifierTypes: map-get($borderModifierTypes, $v);

			#{rkrRuleBEM($rkrBorderEntity, $bemRadTop)} {

                @each $modType in $modifierTypes { border-#{$modType}-radius:  $sz !important; }
                
			}
		}
	}
}



@mixin rkrBorderRadiusResponsive () {
  @each $breakpoint,$val in $rkrRwdBreakpoints {
    /**
     * Border Radius utilities #{$breakpoint}
     */
    @include rkrMQ((zone: $breakpoint)) {
        @include rkrBorderRadius($breakpoint);
    }
  }
}
