//
// Pack object funtions
//

//
// rkrFnPackRule
// Generate Pack Object related rule
//
@function rkrFnPackRule($_inAttr, $_inIsElem: true) {

  $response: rkrFnAttributeRule(pack, null);

  @if $_inAttr != null {
    $prefix: '-';
    @if $_inIsElem {
      $prefix: '_';
    }

    $param: $rkrPackNs + $prefix + $_inAttr;
    $response: rkrFnAttributeRule(pack, $param);

  }

  @return $response;

}


//
// rkrMxPackModifiers
// Generate media modifiers
//

@mixin rkrMxPackModifiers() {

  $mPackSpacing: fnModifiersMap(5px, 5px);

  @each $key,$val in $mPackSpacing {

    /* Pack Object with '#{$key}' modifier */
    #{rkrFnPackRule(map-get($rkrMModifiersNaming, $key), false)} {
      border-spacing: $val;
    }
  }
}
