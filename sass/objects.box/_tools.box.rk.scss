//
// Box object funtions
//

//
// fnRuleBO
// Generate Media Object related rule
//
@function fnRuleBO($_inAttr, $_inIsElem: true) {

  $response: fnAttributeRule(box, null);

  @if $_inAttr != null {
    $prefix: '-';
    @if $_inIsElem {
      $prefix: '_';
    }

    $param: $rkrNsBox + $prefix + $_inAttr;
    $response: fnAttributeRule(box, $param);

  }

  @return $response;

}


//
// mxMediaModifiers
// Generate media modifiers
//

@mixin mxBoxModifiers() {

  $rkrBoxMediaSpacing: fnModifiersMap(5px, 5px, true);

  @each $key,$val in $rkrBoxMediaSpacing {

    /* Box Object with '#{$key}' modifier */
    #{fnRuleBO(map-get($rkrModifiersNaming, $key), false)} {
      padding: $val; 
    }
  }
}
