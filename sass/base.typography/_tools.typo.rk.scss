//
// Typography tools
//

//
// fnTypoRule
// Generate typography related rule
//
@function fnTypoRule($_inAttr, $_inIsElem: true) {

  $attr: $rkTypoAttrName;
  $response: fnAttributeRule($attr, null);

  @if $_inAttr != null {
    $prefix: '-';
    @if $_inIsElem {
      $prefix: '_';
    }

    $param: $prefix + $_inAttr;
    $response: fnAttributeRule($attr, $param);

  }

  @return $response;

}


//
// mxTypoModifiers
// Generate typography modifiers
//
@mixin mxTypoModifiers() {

  $mTypoSpacing: fnModifiersMap(14px, 4px, false);

  @each $key,$val in $mTypoSpacing {
    /* Media object with #{$key} modifier */
    #{fnTypoRule(map-get($rkModifiersNaming, $key), false)} {
			font-size: $val;    
    }
  }

}
