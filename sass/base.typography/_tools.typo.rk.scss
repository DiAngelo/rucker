//
// Typography tools
//

//
// rkrFnTypoRule
// Generate typography related rule
//
@function rkrFnTypoRule($_inAttr, $_inIsElem: true) {

  @return rkrFnEntityRule(typo, $rkrTypoNs, $_inAttr, $_inIsElem);

}


//
// rkrMxTypoModifiers
// Generate typography modifiers
//
@mixin rkrMxTypoModifiers() {

  $mTypoSpacing: rkrFnMModifiers(14px, 4px, false);

  @each $key,$val in $mTypoSpacing {
    /* Media object with #{$key} modifier */
    #{rkrFnTypoRule(map-get($rkrMModifiersNaming, $key), false)} {
			font-size: $val;    
    }
  }

}



//
// rkrMxTypoResponsiveBase
//
@mixin rkrMxTypoResponsiveBase {
  
  @if $rkrTypoBResponsive {
    
    @each $type,$szVal in $rkrTypoMSzBase {
      
      @if $rkrBResponsiveMobileFirst {
      
        @if $type == tiny {
        
          /* Work with mobile first principle */
          html { font-size: $szVal; }
        
        } @else {
      
          @include rkrMxResponsive((from: $type)) {
            html { font-size: $szVal; }
          }

        }      

      } @else {
      
        @if $type == huge {
        
          /* work with destop first principle */
          html { font-size: $szVal; }
        
        } @else {
      
          @include rkrMxResponsive((to: $type)) {
            html { font-size: $szVal; }
          }

        }  
      
      } // @else
      
    } // @each
  
  } @else {
  
    html { font-size: $rkrTypoSzBase; }
  
  }
  
}
